---
sources:
  inspec_exec_source:
    type: exec
    mode: scheduled
    scheduled:
      exec_interval_secs: 30
    command:
      - /bin/bash
      - -c
      - "inspec exec ${INSPEC_TARGET} --reporter json:-"

transforms:
  parse_json_transform:
    type: remap
    inputs:
      - inspec_exec_source
    source: |-
      . = parse_json!(.message)

  lua_transform:
    type: lua
    inputs:
      - parse_json_transform
    version: "2"
    hooks:
      process: process
    source: |-
      function copy(obj, seen)
        if type(obj) ~= 'table' then return obj end
        if seen and seen[obj] then return seen[obj] end
        local s = seen or {}
        local res = setmetatable({}, getmetatable(obj))
        s[obj] = res
        for k, v in pairs(obj) do res[copy(k, s)] = copy(v, s) end
        return res
      end

      function process(event, emit)
        tmp_event = copy(event)
        for i,profile in pairs(event["log"]["profiles"]) do
          for j,control in pairs(profile["controls"]) do
            final_result = -1
            for k,result in pairs(control["results"]) do
              if result["status"] == "passed" then
                final_result = 1
              end
              if result["status"] == "failed" then
                final_result = 0
                break
              end
            end
            control["result"] = final_result
            control["profile"] = profile["name"]
            tmp_event["log"] = control
            emit(tmp_event)
          end
        end
      end

  log_to_metric_transform:
    type: log_to_metric
    inputs:
      - lua_transform
    metrics:
      - type: gauge
        field: result
        tags:
          control: "{{id}}"
          title: "{{title}}"
          description: "{{desc}}"
          profile: "{{profile}}"
          hostname: "${HOSTNAME}"

sinks:
  prometheus_exporter_sink:
    type: prometheus_exporter
    inputs:
      - log_to_metric_transform
    address: 0.0.0.0:9598
    default_namespace: inspec
